{
  "general": {
    "id": "highway",
    "seed": 0,
    "workspace": "tmp/highway",
    "dictConfig": {
      "version": 1,
      "disable_existing_loggers": false,
      "formatters": {
        "standard": {
          "format": "[%(levelname)s] %(message)s"
        }
      },
      "handlers": {
        "default": {
          "level": "DEBUG",
          "formatter": "standard",
          "class": "logging.StreamHandler"
        }
      },
      "loggers": {
        "": {
          "handlers": [
            "default"
          ],
          "level": "WARN",
          "propagate": false
        },
        "ncarrara.bftq_pydial.tools.features": {
          "handlers": [
            "default"
          ],
          "level": "WARN",
          "propagate": false
        },"ncarrara.utils.math": {
          "handlers": [
            "default"
          ],
          "level": "INFO",
          "propagate": false
        },
        "ncarrara.utils_rl.algorithms.dqn": {
          "handlers": [
            "default"
          ],
          "level": "INFO",
          "propagate": false
        },
        "ncarrara.bftq_pydial.bftq.pytorch_budgeted_fittedq": {
          "handlers": [
            "default"
          ],
          "level": "INFO",
          "propagate": false
        },
        "ncarrara.utils_rl.algorithms.pytorch_fittedq": {
          "handlers": [
            "default"
          ],
          "level": "INFO",
          "propagate": false
        },
        "ncarrara.utils_rl.environments.slot_filling_env.slot_filling_env": {
          "handlers": [
            "default"
          ],
          "level": "WARN",
          "propagate": false
        },
        "ncarrara.utils.os": {
          "handlers": [
            "default"
          ],
          "level": "ERROR",
          "propagate": false
        },
        "ncarrara.bftq_pydial.main.run_dqn": {
          "handlers": [
            "default"
          ],
          "level": "DEBUG",
          "propagate": false
        }
      }
    }
  },
  "feature_str": "feature_identity",
  "generate_envs": {
    "envs_str": "highway-v0",
    "envs_params": {
        "lanes_count": [2],
        "initial_spacing": [2],
        "vehicles_count": [5],
        "duration": [20],
        "other_vehicles_type": ["highway_env.vehicle.behavior.IDMVehicle"],
        "centering_position": [[0.3, 0.5]],
        "collision_reward": [0]
    }
  },
  "create_data": {
    "filename_data": "samples.data",
    "as_json": false,
    "handcrafted_greedy_policy": true,
    "trajs_by_ftq_batch": 50,
    "lambda_": 0,
    "normalize_reward": false,
    "N_trajs": 2000,
    "epsilon_decay": {
      "start": 1.0,
      "decay": 0.0015
    }
  },
  "main": {
    "filename_data": "samples.data",
    "path_data": null,
    "normalize_reward": true,
    "N_trajs": 20
  },

  "nb_trajs_between_epoch": 30,
  "lambdas": "[0]",
  "betas": "np.linspace(0., 1., 5)",
  "betas_test": "np.linspace(0., 1., 10)",
  "gamma": 0.8,
  "gamma_c": 0.8,

  "dqn_params": {
    "batch_size_experience_replay": 128,
    "target_update": 50,
    "optimizer": "ADAM",
    "loss_function": "l2",
    "lr": 0.0005,
    "weight_decay": 0.00005,
    "workspace": "dqn"
  },

  "ftq_params": {
    "nn_loss_stop_condition": 0.0,
    "max_nn_epoch": 400,
    "optimizer": "ADAM",
    "loss_function": "l2",
    "max_ftq_epoch": 15,
    "learning_rate": 0.01,
    "reset_policy_each_ftq_epoch": true,
    "delta_stop": 0.0,
    "weight_decay": 0.0,
    "batch_size_experience_replay": "ALL_BATCH",
    "step_test_policy_nn_epoch": 50

  },

  "net_params": {
    "activation_type": "TANH",
    "reset_type": "XAVIER",
    "intra_layers": [
      256,
      256
    ]
  },

  "bftq_params": {
    "nn_loss_stop_condition": 0.0,
    "max_nn_epoch": 400,
    "optimizer": "ADAM",
    "loss_function": "l2",
    "max_ftq_epoch": 15,
    "learning_rate": 0.01,
    "reset_policy_each_ftq_epoch": true,
    "delta_stop": 0.001,
    "weight_decay": 0.000,
    "batch_size_experience_replay": "ALL_BATCH",
    "loss_function_c": "l2",
    "weights_losses": [
      1.0,
      1.0
    ]
  },
  "bftq_net_params": {
    "beta_encoder_type": "LINEAR",
    "size_beta_encoder": 50,
    "activation_type": "RELU",
    "reset_type": "XAVIER",
    "intra_layers": [
      256,
      256
    ]
  }
}


