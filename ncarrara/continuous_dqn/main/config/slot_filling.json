{
  "general": {
    "id": "0_slot_filling",
     "workspace": "tmp/0_slot_filling",
    "dictConfig": {
      "version": 1,
      "disable_existing_loggers": false,
      "formatters": {
        "standard": {
          "format": "[%(levelname)s] %(message)s"
        }
      },
      "handlers": {
        "default": {
          "level": "INFO",
          "formatter": "standard",
          "class": "logging.StreamHandler"
        }
      },
      "loggers": {
        "": {
          "handlers": [
            "default"
          ],
          "level": "WARN",
          "propagate": true
        },
        "ncarrara.bftq_pydial.tools.features": {
          "handlers": [
            "default"
          ],
          "level": "WARN",
          "propagate": false
        },
        "ncarrara.bftq_pydial.bftq.pytorch_budgeted_fittedq": {
          "handlers": [
            "default"
          ],
          "level": "INFO",
          "propagate": false
        },
        "ncarrara.utils_rl.algorithms.pytorch_fittedq": {
          "handlers": [
            "default"
          ],
          "level": "INFO",
          "propagate": false
        },
        "ncarrara.utils_rl.environments.slot_filling_env.slot_filling_env": {
          "handlers": [
            "default"
          ],
          "level": "WARN",
          "propagate": false
        },
        "ncarrara.utils.os": {
          "handlers": [
            "default"
          ],
          "level": "ERROR",
          "propagate": false
        }
      }
    },

    "seed": null
  },
  "feature_str": "identity",
  "test_and_base": {
    "N": 100
  },
  "no_transfer_dqn": {
    "traj_max_size": null,
    "env_str": "CartPole-v0",
    "N": 100,
    "start_decay": 0.5,
    "decay": 0.05,
    "dqn_params": {
      "gamma": 0.999,
      "batch_size_experience_replay": 128,
      "target_update": 10,
      "optimizer": "ADAM",
      "loss_function": "l2",
      "lr": 0.01,
      "weight_decay": 0.01,
      "workspace": "dqn"
    },
    "net_params": {
      "sizes": [
        4,
        16,
        8,
        2
      ]
    }
  },
  "n_actions": 2,
  "transfer_dqn": {
    "traj_max_size": 200,
    "N": 100,
    "start_decay": 0.5,
    "decay": 0.05,
    "dqn_params": {
      "gamma": 0.999,
      "batch_size_experience_replay": 2048,
      "target_update": 10,
      "optimizer": "ADAM",
      "loss_function": "l2",
      "lr": 0.01,
      "weight_decay": 0.01,
      "workspace": "dqn"
    },
    "net_params": {
      "sizes": [
        4,
        16,
        8,
        2
      ]
    }
  },
  "feature_autoencoder_info": {
    "feature_str": "feature_autoencoder_slot_filling"
  },
  "feature_dqn_info": {
    "feature_str": "feature_dqn_identity"
  },
  "source_envs": {
    "envs_str": "slot_filling_env_v0",
    "envs_params": {
      "user_params": [
        {"cerr": -5,"cok": 5,"ser": 0.1,"cstd": 0.1,"proba_hangup": 0.25},
        {"cerr": -0.25,"cok": 0.25,"ser": 0.1,"cstd": 0.6,"proba_hangup": 0.25},
        {"cerr": -0.25,"cok": 0.25,"ser": 0.6,"cstd": 0.6,"proba_hangup": 0.25},
        {"cerr": -0.5,"cok": 0.5,"ser": 0.6,"cstd": 0.6,"proba_hangup": 0.0},
        {"cerr": -0.25,"cok": 0.25,"ser": 0.6,"cstd": 0.6,"proba_hangup": 0.25},
        {"cerr": -0.25,"cok": 0.25,"ser": 0.6,"cstd": 0.6,"proba_hangup": 0.25},
        {"cerr": -0.5,"cok": 0.5,"ser": 0.3,"cstd": 0.6,"proba_hangup": 1.0},
        {"cerr": -0.25,"cok": 0.25,"ser": 0.3,"cstd": 0.6,"proba_hangup": 1.0}
      ],
      "max_turn": [10],
      "size_constraints": [3],
      "penalty_if_bye": [0.0],
      "penalty_if_hangup": [0.0],
      "penalty_if_summarize_fail": [0.0],
      "penalty_by_turn": [0.0],
      "penalty_if_max_turn": [0.0],
      "reward_if_sucess": [100.0]
    }
  },
  "target_envs": {
    "envs_str": "slot_filling_env_v0",
    "envs_params": {
      "user_params": [
        {"cerr": -5,"cok": 5,"ser": 0.1,"cstd": 0.1,"proba_hangup": 0.25},
        {"cerr": -0.25,"cok": 0.25,"ser": 0.1,"cstd": 0.6,"proba_hangup": 0.25},
        {"cerr": -0.25,"cok": 0.25,"ser": 0.6,"cstd": 0.6,"proba_hangup": 0.25},
        {"cerr": -0.5,"cok": 0.5,"ser": 0.6,"cstd": 0.6,"proba_hangup": 0.0},
        {"cerr": -0.25,"cok": 0.25,"ser": 0.6,"cstd": 0.6,"proba_hangup": 0.25},
        {"cerr": -0.25,"cok": 0.25,"ser": 0.6,"cstd": 0.6,"proba_hangup": 0.25},
        {"cerr": -0.5,"cok": 0.5,"ser": 0.3,"cstd": 0.6,"proba_hangup": 1.0},
        {"cerr": -0.25,"cok": 0.25,"ser": 0.3,"cstd": 0.6,"proba_hangup": 1.0}
      ],
      "max_turn": [10],
      "size_constraints": [3],
      "penalty_if_bye": [0.0],
      "penalty_if_hangup": [0.0],
      "penalty_if_summarize_fail": [0.0],
      "penalty_by_turn": [0.0],
      "penalty_if_max_turn": [0.0],
      "reward_if_sucess": [100.0]
    }
  },
  "learn_autoencoders": {
    "weight_decay": 0.0,
    "learning_rate": 0.001,
    "autoencoder_size": [
      8,
      32
    ],
    "optimizer_str": "ADAM",
    "normalize": true,
    "n_epochs": 500,
    "criterion": "l1"
  },
  "N_base_trajectories": 100
}